package OutputPanel{		import flash.text.TextField;	import flash.display.*;	import flash.events.*;	import flash.net.*;		public class GraphicManager{				private var draft:XMLList;		private var Preview:Array;		private var Selected:Array;		private var Pictures:Array;		private var imageURLs:Array;		private var count:uint;		private var bitmapLoader:Loader;		public var isLoaded:Boolean;								public function GraphicManager(){					}		public function defaultLoaded(e:Event){						//Save the loaded bitmap to a local variable			var image:Bitmap = (Bitmap)(e.target.content);			isLoaded = true;					}		public function setDraft(d:XMLList){									draft = new XMLList();			draft = d;			//trace(draft);			getPictures();				}		public function getPictures(){				isLoaded = false;								Pictures = new Array();				imageURLs = new Array();				count = 0;												for each( var element:XML in draft.elements()){									imageURLs.push("Photos/"+element.@id+".png");												}				try{				loadImage();				}catch (e:Error){					trace ("here");				}		}		public function loadImage():void { 						//Create the loader			bitmapLoader = new Loader(); 			//trace(imageURLs[0]);			//Get the URL to load			var urlRequest:URLRequest = new URLRequest(imageURLs[0]);			//Listen when the loading is complete			bitmapLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, imageLoaded);			bitmapLoader.addEventListener(IOErrorEvent.IO_ERROR, IOerror);			 //Load the image			 imageURLs.splice(0,1);			bitmapLoader.load(urlRequest);			//Remove the first URL in the imageURLs array since we			//started to load that image.					}		private function IOerror(e:Event){			trace ("here");		}		public function imageLoaded(e:Event):void { 			//Save the loaded bitmap to a local variable			var image:Bitmap = (Bitmap)(e.target.content); 			Pictures.push(image);			//Update the loaded images count			count++; 			//We load the next image if there are still more URLs in the array			if (imageURLs.length > 0) {				loadImage();			}			else{				isLoaded = true;			}		}		public function getPreview(d:XMLList):Array{			Preview = new Array();			for each( var element:XML in d.elements()){				var temp:TextField = new TextField();				temp.text = draft.rider.(@id==element.@num);				Preview.push(temp);			}			//trace(Preview.toString());			return Preview;					}		public function getSelection(d:XMLList):Array{			Selected = new Array();						for each( var element:XML in d.elements()){				var rider:Object = new Object();				rider.score = new TextField();				rider.score.text = element.@score;				rider.name = new TextField();				rider.name.text = draft.rider.(@id==element.@num);				rider.photo = new Bitmap(Pictures[int(draft.rider.(@id==element.@num).@id)-1].bitmapData);				//trace(draft.rider.(@id==element.@num).@id);				Selected.push(rider);			}					return Selected;		}			}	}