package OutputPanel{		import flash.display.MovieClip;	import fl.video.VideoEvent;	import flash.events.Event;		public class main extends MovieClip{				private var currentHeat:XMLList;		private var sequenceId:Array;		private var GManager:GraphicManager;		public var videoIndex:int;		public var videoTotal:int;				public function main () {						GManager = new GraphicManager();		}		public function isit():Boolean{			return GManager.isLoaded;				}		public function loadDraft(d:XMLList){						MovieClip(root).VC.Hide();			GManager.setDraft(d);					}		public function Done(){						MovieClip(root).VC.Show();		}		public function recive(d:XMLList){			currentHeat = new XMLList(d);			//trace(currentHeat);			IP.setPreview(GManager.getPreview(currentHeat));		}		public function confirm(d:XMLList){						sequenceId = new Array();			if(currentHeat==d){				sequenceId = MovieClip(root).getCurrent();				//trace("only"+sequenceId);				IP.removeSelection();								GO.loadGraphics(GManager.getSelection(currentHeat),sequenceId);				IP.setSelection(GManager.getSelection(currentHeat));				setPlaylist(currentHeat,sequenceId)											}					}						public function setPlaylist(d1:XMLList,d2:Array){			var index:int = 0;			var filename:String = new String();						player.autoPlay = false				for each ( var element:XML in d1.elements()){						filename = "videos/r"+uint(d2[0])+"h"+uint(d2[1])+"s"+(index+1)+".f4v";				//trace(filename);				player.activeVideoPlayerIndex = index;				player.source = filename;				index++;			}							player.addEventListener(VideoEvent.COMPLETE, nextVideo);			player.activeVideoPlayerIndex = 0;						startSequence(index);		}				public function nextVideo(e:VideoEvent){ 						player.stop();			//trace(videoTotal);			//trace(videoIndex);						if (videoIndex < videoTotal){								videoIndex++;				player.activeVideoPlayerIndex = videoIndex;				player.visibleVideoPlayerIndex = videoIndex;				//player.play();				GO.gotoAndStop(30);				GO.Continue(videoIndex);							}			else{				player.removeEventListener(VideoEvent.COMPLETE, nextVideo);				GO.gotoAndStop(60);				GO.Outro();			}		}		public function startSequence(total:int){			player.activeVideoPlayerIndex = 0;			player.visibleVideoPlayerIndex = 0;			videoIndex=0;			videoTotal = total-1;			GO.gotoAndStop(1);			GO.Beging();					}			}	}